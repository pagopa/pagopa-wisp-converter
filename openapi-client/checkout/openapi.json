{
    "openapi": "3.0.1",
    "info": {
        "title": "Checkout pagoPA carts - auth API",
        "description": "Authenticated API exposed to allow integration to EC or other clients with Checkout pagoPA carts",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://api.dev.platform.pagopa.it/checkout/carts-auth/v1"
        }
    ],
    "paths": {
        "/carts": {
            "post": {
                "summary": "PostCarts",
                "description": "Authenticated API exposed to allow integration to EC or other clients with Checkout pagoPA carts",
                "operationId": "PostCarts",
                "requestBody": {
                    "description": "New Cart related to payment requests",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CartRequest"
                            },
                            "example": {
                                "emailNotice": "my_email@mail.it",
                                "paymentNotices": [
                                    {
                                        "noticeNumber": "302012387654312384",
                                        "fiscalCode": "77777777777",
                                        "amount": 1000,
                                        "companyName": "companyName",
                                        "description": "description"
                                    },
                                    {
                                        "noticeNumber": "302012387654312385",
                                        "fiscalCode": "77777777777",
                                        "amount": 2000,
                                        "companyName": "companyName",
                                        "description": "description"
                                    }
                                ],
                                "returnUrls": {
                                    "returnOkUrl": "www.comune.di.prova.it/pagopa/success.html",
                                    "returnCancelUrl": "www.comune.di.prova.it/pagopa/cancel.html",
                                    "returnErrorUrl": "www.comune.di.prova.it/pagopa/error.html"
                                },
                                "idCart": "id_cart",
                                "allCCP": "false"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart initilized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CartResponse"
                                },
                                "example": {
                                    "checkoutRedirectUrl": "https://dev.checkout.pagopa.it.it/c/123"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Formally invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                },
                                "example": {
                                    "type": "about:blank",
                                    "title": "string",
                                    "status": 200,
                                    "detail": "There was an error processing the request",
                                    "instance": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                },
                                "example": {
                                    "type": "about:blank",
                                    "title": "string",
                                    "status": 200,
                                    "detail": "There was an error processing the request",
                                    "instance": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ProblemJson": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "An absolute URI that identifies the problem type. When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).",
                        "format": "uri",
                        "default": "about:blank",
                        "example": "https://example.com/problem/constraint-violation"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable"
                    },
                    "status": {
                        "$ref": "#/components/schemas/HttpStatusCode"
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human readable explanation specific to this occurrence of the\nproblem.",
                        "example": "There was an error processing the request"
                    },
                    "instance": {
                        "type": "string",
                        "description": "An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.",
                        "format": "uri"
                    }
                }
            },
            "HttpStatusCode": {
                "maximum": 600,
                "exclusiveMaximum": true,
                "minimum": 100,
                "type": "integer",
                "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.",
                "format": "int32",
                "example": 200
            },
            "CartRequest": {
                "required": [
                    "paymentNotices",
                    "returnUrls"
                ],
                "type": "object",
                "properties": {
                    "emailNotice": {
                        "type": "string",
                        "format": "email",
                        "example": "my_email@mail.it"
                    },
                    "paymentNotices": {
                        "maxItems": 5,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentNotice"
                        },
                        "example": [
                            {
                                "noticeNumber": "302012387654312384",
                                "fiscalCode": "77777777777",
                                "amount": 1000,
                                "companyName": "companyName",
                                "description": "description"
                            },
                            {
                                "noticeNumber": "302012387654312385",
                                "fiscalCode": "77777777777",
                                "amount": 2000,
                                "companyName": "companyName",
                                "description": "description"
                            }
                        ]
                    },
                    "returnUrls": {
                        "required": [
                            "returnOkUrl",
                            "returnCancelUrl",
                            "returnErrorUrl"
                        ],
                        "type": "object",
                        "properties": {
                            "returnOkUrl": {
                                "type": "string",
                                "format": "uri",
                                "example": "www.comune.di.prova.it/pagopa/success.html"
                            },
                            "returnCancelUrl": {
                                "type": "string",
                                "format": "uri",
                                "example": "www.comune.di.prova.it/pagopa/cancel.html"
                            },
                            "returnErrorUrl": {
                                "type": "string",
                                "format": "uri",
                                "example": "www.comune.di.prova.it/pagopa/error.html"
                            }
                        }
                    },
                    "idCart": {
                        "type": "string",
                        "example": "id_cart"
                    },
                    "allCCP": {
                        "type": "boolean",
                        "example": "false"
                    }
                }
            },
            "PaymentNotice": {
                "required": [
                    "noticeNumber",
                    "fiscalCode",
                    "amount",
                    "companyName",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "noticeNumber": {
                        "maxLength": 18,
                        "minLength": 18,
                        "type": "string"
                    },
                    "fiscalCode": {
                        "maxLength": 11,
                        "minLength": 11,
                        "type": "string"
                    },
                    "amount": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "companyName": {
                        "maxLength": 140,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 140,
                        "type": "string"
                    }
                }
            },
            "CartResponse": {
                "required": [
                    "checkoutRedirectUrl"
                ],
                "type": "object",
                "properties": {
                    "checkoutRedirectUrl": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://dev.checkout.pagopa.it.it/c/123"
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKeyHeader": {
                "type": "apiKey",
                "name": "Ocp-Apim-Subscription-Key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "apiKeyHeader": []
        }
    ]
}